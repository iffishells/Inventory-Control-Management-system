-- show all products
SELECT product_name as NAME, description as DESCRIPTION from products;
-- show all orders untill today date
SELECT COUNT(ORDERS.ORDER_ID) AS ORDERS ,ORDERS.ORDER_DATE FROM ORDERS INNER JOIN ORDER_ITEMS ON ORDERS.ORDER_ID = ORDER_ITEMS.ORDER_ID	 WHERE ORDERS.ORDER_DATE <= CURDATE() GROUP BY ORDERS.ORDER_ID;
-- bill generates 
set @QUANT:= 2; ## that variable in php which user would choose
SET @AMOUNT_PAID = 2000;## that variable in php which user would choose
SELECT PRODUCTS.PRODUCT_NAME, PRODUCTS.DESCRIPTION  , ORDER_ITEMS.QUANTITY,ORDER_ITEMS.UNIT_PRICE,(@QUANT * UNIT_PRICE) AS TOTAL_PRICE , (@AMOUNT_PAID - (@QUANT * UNIT_PRICE)) AS BALANCE_DUE FROM PRODUCTS INNER JOIN ORDER_ITEMS ON PRODUCTS.PRODUCT_ID = ORDER_ITEMS.PRODUCT_ID;
-- remaining qty of products in databases
#set @QUANT:= 2;
#SET @AMOUNT_PAID = 2000;
#SELECT PRODUCTS.PRODUCT_NAME, PRODUCTS.DESCRIPTION  , ORDER_ITEMS.QUANTITY,ORDER_ITEMS.UNIT_PRICE,(@QUANT * UNIT_PRICE) AS TOTAL_PRICE , (@AMOUNT_PAID - (@QUANT * UNIT_PRICE)) AS BALANCE_DUE FROM PRODUCTS INNER JOIN ORDER_ITEMS ON PRODUCTS.PRODUCT_ID = ORDER_ITEMS.PRODUCT_ID;
#UPDATE ORDER_ITEMS SET QUANTITY = QUANTITY - @QUANT WHERE ORDER_ITEMS.ORDER_ID = 2; #MATCH ORDER_ID WITH BILL ITEMS

